spring.application.name=identity_service
server.port=8087



# ===============================
# CORS (global, dynamic from env)
# ===============================
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=${ALLOWED_ORIGINS:*}
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=${ALLOWED_METHODS:*}
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=${ALLOWED_HEADERS:*}
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

# ===============================
# Routes (dynamic via env vars)
# ===============================
# Project Manager microservice
spring.cloud.gateway.routes[0].id=project-manager
spring.cloud.gateway.routes[0].uri=${PROJECT_MANAGER_URL:http://localhost:8081}
spring.cloud.gateway.routes[0].predicates[0]=Path=/project/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# Auth (Keycloak signup/signin) route
spring.cloud.gateway.routes[1].id=keycloak-auth


spring.cloud.gateway.routes[1].uri=${KEYCLOAK_URL:http://localhost:8080}
spring.cloud.gateway.routes[1].predicates[0]=Path=/realms/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=0

# ===============================
# Security (JWT validation)
# ===============================
# Note: DynamicJwtDecoder overrides this at runtime,
# so we only give a placeholder value.
spring.security.oauth2.resourceserver.jwt.issuer-uri=${DUMMY_ISSUER:http://placeholder}

# ===============================
# Logging
# ===============================
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL:INFO}
logging.level.org.springframework.cloud.gateway=${GATEWAY_LOG_LEVEL:INFO}

# Keycloak configuration
#keycloak.base-url=http://localhost:8080
keycloak.base-url=http://keycloak-server:8080
keycloak.realm=master
keycloak.admin-username=admin
keycloak.admin-password=admin@123
keycloak.client-id=admin-cli

jwt.secret=super-secret-signing-key-256-bit
